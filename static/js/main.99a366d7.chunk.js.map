{"version":3,"sources":["img sync /^/.//.*$","img/apple.png","img/kiwi.png","img/mango.png","img/orange.png","components/CardProduct/CardProduct.js","components/Compare/Compare.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","CardProduct","className","this","props","selected","onClick","src","require","image","alt","name","price","Component","Compare","selectedProduct","length","item","condition","product","App","state","isSelected","number","includes","setState","filter","text","changeText","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.99a366d7.chunk.js","sourcesContent":["var map = {\n\t\"./apple.png\": 16,\n\t\"./kiwi.png\": 17,\n\t\"./mango.png\": 18,\n\t\"./orange.png\": 19\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 15;","module.exports = __webpack_public_path__ + \"static/media/apple.b0461f21.png\";","module.exports = __webpack_public_path__ + \"static/media/kiwi.103cc150.png\";","module.exports = __webpack_public_path__ + \"static/media/mango.a3f96b85.png\";","module.exports = __webpack_public_path__ + \"static/media/orange.2e9f99aa.png\";","import React, { Component } from 'react';\nimport './CardProduct.scss';\n\nclass CardProduct extends Component {\n  render() {\n    return (\n      <div\n        className={this.props.selected ? ' product hightLight' : 'product'}\n        onClick={this.props.onClick}\n      >\n        <div className=\"product__image\">\n          <span className=\"details\">\n            {this.props.selected ? ' Remove' : 'Compare'}\n          </span>\n          <img src={require(`../../img/${this.props.image}`)} alt=\"fruit-img\" />\n        </div>\n        <div className=\"product__description\">\n          <span>{this.props.name}</span>\n          <span className=\"product__price\">{this.props.price}</span>\n        </div>\n      </div>\n    );\n  }\n  4;\n}\nexport default CardProduct;\n","import React from 'react';\nimport './Compare.scss';\n\nconst Compare = (props) => {\n  if (props.selectedProduct.length < 2) {\n    return null;\n  }\n  return (\n    <>\n      <div className=\"wrapper\">\n        <table>\n          <thead>\n            <tr>\n              <th></th>\n              {props.selectedProduct.map((item) => {\n                return <th>{item.name}</th>;\n              })}\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <th>Price</th>\n              {props.selectedProduct.map((item) => {\n                return <td>{item.price}</td>;\n              })}\n            </tr>\n            <tr>\n              <th>Condition</th>\n              {props.selectedProduct.map((item) => {\n                return <td>{item.condition}</td>;\n              })}\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n};\nexport default Compare;\n","import React, { Component } from 'react';\nimport CardProduct from './components/CardProduct/CardProduct';\nimport Compare from './components/Compare/Compare';\nimport './App.scss';\n\nconst product = [\n  {\n    name: 'Apple',\n    price: ' $2.40',\n    condition: 'fresh',\n    image: 'apple.png',\n  },\n  {\n    name: 'Kiwi',\n    price: ' $4.65',\n    condition: 'frozen',\n    image: 'kiwi.png',\n  },\n  {\n    name: 'Mango',\n    price: ' $9.25',\n    condition: 'fresh',\n    image: 'mango.png',\n  },\n  {\n    name: 'Orange',\n    price: ' $3.50',\n    condition: 'frozen',\n    image: 'orange.png',\n  },\n];\nclass App extends Component {\n  state = {\n    selected: [],\n  };\n\n  isSelected = (number) => this.state.selected.includes(number);\n  onClick = (number) => {\n    if (this.isSelected(number)) {\n      // this.removeFromSelection(number);\n      this.setState({\n        selected: this.state.selected.filter((item) => item !== number),\n        text: 'remove',\n      });\n    } else {\n      // this.addToSelection(number);\n      this.setState({ selected: [...this.state.selected, number] });\n    }\n  };\n  selectedProduct = () => {\n    return product.filter((item, number) => this.isSelected(number));\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"container\">\n          {product.map((item, number) => {\n            return (\n              <CardProduct\n                name={item.name}\n                price={item.price}\n                image={item.image}\n                selected={this.isSelected(number)}\n                onClick={() => this.onClick(number)}\n                changeText={this.changeText}\n              />\n            );\n          })}\n        </div>\n        <Compare selectedProduct={this.selectedProduct()} />\n      </>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport style from './style/base.scss';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}